JDBC 라이브러리
자바는 데ㅔ이터베이스와 연결해서 데이터 입출력 작업을 할 수 잇도록 JDBC 라이브러리 (java.sql 패키리)를 제ㅔ공한다
JDBC는 데ㅔ이터베ㅔ이스 관리 시스템 (DBMS)의 한 종류와 상관없이 동일하게ㅔ 사용할 수 있는 클래스와 인터페ㅔ이스로 구성이 된다.

데이터베ㅔ이스가 변경이 되면 드라이버만 변경해주면 된다.
sql 형식은 같아서 Mysql 에서 작성하던걸 mariaDB에 넣어도 상관없음 driver만 수정하면 됨


데이터베이스와 연결하기 위해선
1. JDBC 드라이버를 로드한다. (리플렉션 기법을 이용하여 접속하고 싶은 DB의 드라이버를 찾아서 load)
    Class.forName("com.mysql.cj.jdbc.Driver");

2. 드라이버 로드를 성공하였다면, 연결 Connection 객체를 생성한다.
    String url =
                    "jdbc:mysql://localhost:3306/bookmarketdb?serverTimezone=Asia/Seoul"; //항상 serverTimezone 맞추기
            /*
                            + "?useSSL=false&allowPublicKeyRetrieval=true"
                            + "&useUnicode=true&characterEncoding=UTF-8"
                            + "&serverTimezone=Asia/Seoul
             */
            String user = "root";
            String password = "mysql1234";

    Connection con = DriverManager.getConnection(url, user, password);

3. Connection 객체가 생성 되었다면, 쿼리문을 담아 전송한다.

    String sql = "insert into users(userid,username,userpassword,userage,useremail) " +
                        "values('10','신세계','1234','20','sin@gmail.com')";
    int result = con.createStatement().executeUpdate(sql);

4. 전송 결과를 받아서 처리
     if (result == 1) {
         System.out.println("insert success");
     } else {
         System.out.println("insert failed");
     }


sql문을 매개변수화 시키기 위해 PreparedStatement로 매개 변수 화 시킨다.
String sql = "insert into users values(?,?,?,?,?)";
PreparedStatement pstmt = con.prepareStatement(sql);
            // 값 지정
            pstmt.setInt(1, 11);
            pstmt.setString(2,"홍길동");
            pstmt.setString(3,"password");
            pstmt.setInt(4, 25);
            pstmt.setString(5,"gildoung@gmail.com");
int result = pstmt.executeUpdate();


auto increment의 경우 안넣어도 됌
date는 now() 로 처리
//bno를 안넣음
 String sql = "insert into boards(btitle, bcontent, bwriter, bdate, bfilename, bfiledata) values(?,?,?,now(),?,?)";